{"./":{"url":"./","title":"關於我","keywords":"","body":"這裡是一個介紹我自己的地方 我是一個不斷學習成長的資深程序猿。上圖是台灣台東的太麻裡山上，是我出生的地方。 啟蒙 學生時期接觸了 DOS 後，從此對電腦產生了興趣。還記得第一次學習的是C，COBOL，Basic，當時只知道 C 是需要配合硬體開發，COBOL 是專門幫銀行寫報表用，Basic完全是學興趣的。C雖然學的不錯，但實在不知道要用在什麼地方，同時學習COBOL當下，將營目控制的部分拿來寫像貪食蛇的小程序，畢竟產報表對學生的我來說實在太枯燥。 在學生後期，微軟出了一款 Visual Studio 97， 裡面包含了VB 5， VC 與 FoxPro，在難易度上 VB 是最易上手的， 這也是當時我能唯一能拿的出手吃飯的工具，程序寫到最後幾乎都在呼叫 Windows API，離標準語法已經很遠了。 .com .com 的興起，再次把區網封閉的環境擊潰，改朝換代後 Novell 開始走向衰敗，Windows 與 Linux 大量取代，這時 Web 出現，應用程式AP的市場也開始消失， 同期間市面興起稿本語言，在工具中我選擇了 asp , php 作為開發工具，也確實的應用在職場與兼案上，隨著不同需求，也遇過很多奇奇怪怪的整合手法，當時網路查詢資源有限，技法通常是個人私藏較多，就好像誰比較有優勢一樣？ 當然用在現在的環境，陳舊的技能相對的也是一種負資產。 網拍 B2B，B2C盛行下，網拍購物也成為最受觀注的項目。VS 工具進版到 .Net 來通吃這商業模式，隨之我也進版了 .Net C# 與 ASP.Net Form 作為主要開發工具。慢慢的因為接觸到小商家，在成本有限的情況下，開發成本是很重要的考量，面對業主，我會選擇 php 的雲方案來節省成本，同時間也漸漸的覺得，微軟的授權費貴到難以承受，免費的開源環境，將會是未來的趨勢。 Database 談到商業應用程式開發，必然會說到儲存裝置。身為微軟陣營的我，MSSQL 當然是必備項目。但在個人立場上，最後也很少再使用，原因也是因為過於昂貴。個人選擇上偏好 mySQL，一路看著它被收購後分家成另一個社群版本 mariadb，直至今，它仍經的起考驗，即便是 NoSQL與 實時資料庫(例如：Firebase) 的出現，依舊對它沒有影響，在我個人經驗上即便是大量資料 I/O 與平衡負載也是很隱定。 MVC 與 Git 軟體發展至此，開始有了設計模式的討論，來統一紛亂的設計標準，也就是 MVC / MVVM 這樣的架構出現，用來標準化開發模式，更容易的分工合作，團隊打架總是勝過單兵作戰，有了統一標準，才能更快的融入別人。控版的使用上也從早期的 SVN，Team Foundation，一路走到 Git。 JavaScript 開發成本始終是業主與老闆的考量，Linux 的走向勢不可避免，我也從 Windows 走向 Mac，伺服器上選擇了 CentOS 應用，相關的架設也是一步一腳印的走來，工具改為 ASP.Net Core 佈署在 Linux 的 Nginx 上，目前的趨勢是前端工具凌架在後端工具之上，形成了各項發展。從 jQuery / Bootstrap，發展到 Recat / Angular / Vue 的出現，打包工具更是多不勝數。 DevOps 近年來我才知道，以前時常自己打包前端，後端，資料儲存，架設維護與自動佈署，這些行為統稱為：DevOps，在現在更有 DevOps認証了。在架設環境時，linux 核心的方式不夠彈性常讓人感覺不方便，於是在VisualBox後出現的 Docker 能在無核心下，自由掛載組合自己需要的開發環境，不用顧及系統的全面，方便又好抛棄，非常的實用。 未來 自學電腦一直是自己的興趣，在這條路上一直的向前進，增長知識。 "},"project/":{"url":"project/","title":"最近一次的專案","keywords":"","body":"project "},"project/note1.html":{"url":"project/note1.html","title":"後台","keywords":"","body":"test "},"about/":{"url":"about/","title":"個人資訊","keywords":"","body":"您好，我是謝明宏，我來自台灣新北市淡水區 個人資訊 謝明宏 email: jacob2hsieh@gmail.comline-id: adodoh （大雄，因為禁止陌生加入，請再通知已加入好友 via email） 電腦專長 前端： HTML / CSS3 / Javascript / JQuery / Bootstrap 後端： ASP.net Core (C#, MVC）/ PHP (LAMP , fastCGI) 資料庫： mySql / MSSql 作業系統： Windows / MacOS / Linux (Centos) 版本管理： Svn / Team Foundation / Git，GitHub 其他經驗: Docker / Redis / Kibana 學習的經驗： iOS swift 手機設計，Vue 2.0 工作經歷 依時間順序，由近及遠： 宸毅科技 (2020-04-01 ~ 2021-10-15, 1.5年) 職位：公司股東 任務：前後台開發，API串接 資料庫：mySql 設計，維護 系統：CentOS 7 主要工具：ASP.net Core MVC / jQuery / Redis / ELK 諾傑 Nogle (2018-01-01 ~ 2020-03-31, 2年) 職位：資深程式設計 任務：前後台開發與支援其他專案 資料庫：mySql 維護 系統：Window Server / CentOS 7 主要工具：ASP.net Core MVC / jQuery / PHP 瑞嘉科技 (2010-01-01 ~ 2017-12-31, 7年) 職位：MIS主管 任務1：MIS 人事相關程式開發 任務2：支援其他單位開發 資料庫：MSSQL 設計，維護 系統：Window Server 主要工具：C# AP / ASP.net / jQuery 華亞科技(美光)，威盛電子 ...... (？ ~ 2017-12-31 ) 最近一次工作內容 主要是負責全端開發， 製作站台，API回調，與另一專案即時聊天室互動修改等等。 工作伺服器 系統：CentOS 7 Web：Nginx，load balance DB：Mariadb，db複寫，讀寫通過 stored procedure 後端：ASP.net Core，編譯，Linux service enabled 快取：Redis / Server Cache Log查詢：Kibana（ELK） Alarm Message：Telegram API 傳遞訊息 UI 設計 Bootstrap AdminLTE / OnsenUI (Mobile app) / SPA Webpage (C# 裡的 PJAX + AJAX 實現) 登入驗証 JWT Header / Google Authenticator 2FA 邏輯說明 總管理：建立管理分站台 分站台：建立管理商戶 商戶： 營銷管理 網站 總管理 建立管理分站台，限制黑名單白名單，並踢除與限制使用者的權限，與操作檢視分站台與商戶的資料與安全性控制。 分站台 建立管理商戶，限制黑名單白名單，並踢除與限制使用者的權限，與操作檢視商戶的資料與安全性控制。 管理金流通道 商戶 建立管理帳戶 管理支付通道，信用卡 / USDT / 支付寶等相關 電腦版畫面與行動裝置畫面 維護即時聊天室 運作在 PHP Workerman上，分為 server端的 TCP port 與 客戶 / 管理者介面。client 透過 socket.io 與 server 溝通。功能有即時談話，廣播，禁言與踢出，與擴充的客製行為。 以上在 gitbook 裡會另外說明，謝謝。 "}}